 



CREATE TABLE [dbo].[Gen_DimDate](
	[DateKey] [int] NOT NULL,
	[DateName] [nvarchar](50) NOT NULL,
	[MiladiDate] [date] NOT NULL,
	[DayNumberOfWeek] [int] NOT NULL,
	[DayNameOfWeek] [nvarchar](50) NOT NULL,
	[DayNumberOfMonth] [int] NOT NULL,
	[DayNumberOfYear] [int] NOT NULL,
	[WeekNumberOfYear] [int] NOT NULL,
	[CalendarQuarterKey] [int] NOT NULL,
	[CalendarQuarterName] [nvarchar](50) NOT NULL,
	[CalendarYear] [int] NOT NULL,
	[CalendarSemesterKey] [int] NOT NULL,
	[CalendarSemester] [nvarchar](50) NOT NULL,
	[CalenderMonthKey] [int] NOT NULL,
	[CalenderMonthName] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_Gen_DimDate] PRIMARY KEY CLUSTERED 
(
	[DateKey] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

 

/****** Object:  UserDefinedFunction [dbo].[Gen_DateToShamsiDatePart]    Script Date: 18/08/1396 07:19:13 ب.ظ ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

   /*   sp_addlogin   */   

 


--create function [dbo].[Gen_DateToShamsiDatePart] (@MiDate DateTime , @ADatePart char) returns int

--AS

--begin

--  Declare @TmpY int, @Leap int

--  Declare @Sh_Y int , @Sh_M int , @Sh_D int, @Result int

--  if @MiDate is null 

--    return 0

--  --Declare @Result int

--  Set @Result = convert(int, convert(float,@MiDate))

--  if @Result <= 78

--  begin

--    Set @Sh_Y = 1278

--    Set @Sh_M = (@Result + 10) / 30 + 10 

--    Set @Sh_D = (@Result + 10) % 30 + 1

--  end 

--  else

--  begin

--    Set @Result = @Result - 78

--    Set @Sh_Y = 1279

--    while 1 = 1 

--    begin

--      Set @TmpY = @Sh_Y + 11

--      Set @TmpY = @TmpY - ( @TmpY / 33) * 33

--      if  (@TmpY <> 32) and ( (@TmpY / 4) * 4 = @TmpY )

--        Set @Leap = 1

--      else

--        Set @Leap = 0

--      if @Result <= (365+@Leap)

--        break

--      Set @Result = @Result -  (365+@Leap)

--      Set @Sh_Y = @Sh_Y + 1

--    end

--    if @Result <= 31*6

--    begin

--      Set @Sh_M = (@Result-1) / 31 + 1

--      Set @Sh_D = (@Result-1) % 31 + 1

--    end

--    else

--    begin

--      Set @Sh_M = ((@Result-1) - 31*6) / 30 + 7

--      Set @Sh_D = ((@Result-1) - 31*6) % 30 + 1

--    end

--  end

--  return

--    case @ADatePart

--      when 'Y' then  @Sh_Y

--      when 'M' then @Sh_M

--      when 'D' then @Sh_D

--    else  0

--    end

--end
GO
 
/****** Object:  UserDefinedFunction [dbo].[Gen_DateToShamsiDate]    Script Date: 18/08/1396 07:19:23 ب.ظ ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

   /*   sp_addlogin   */   

 


GO


declare @Basedate date ,@EndDate date,@CurentDate date,
		@tempDate nvarchar(10) ,@CurenShamsiDate nvarchar(10),
		@year nvarchar(4) ,@month  nvarchar(2) ,@day  nvarchar(2),
		@DateKey int,@DateName  nvarchar(10),@DayNameOfWeek nvarchar(20)
		,@DayNumberOfWeek int,@WeekNumberOfYear int,@tempyear int , @DayNumberOfYear int
		,@CalendarQuarterKey int,@CalendarQuarterName nvarchar(50),@CalendarSemesterKey int
		,@CalendarSemester  nvarchar(50),@CalenderMonthName nvarchar(50) 


set @Basedate='1921/03/21'
 set @EndDate='2121/03/20'
 set @CurentDate=@Basedate
 set @tempyear=0
WHILE @CurentDate<=@EndDate
BEGIN  
		set  @tempDate=   reysbss.dbo.DTOD_MSH(@CurentDate)
		
 
 print @tempdate
 
	set  @year=left(@tempdate,4)
	set  @month=substring(	@tempdate,6,2)
	set  @day=RIGHT(@tempdate,2)
	print @year
	 print @month
	print @day


	set @DateKey= CONVERT(int, @year+@month+@day)


	set @DayNumberOfWeek=
	
	 case when DATENAME(dw,@CurentDate) ='Thursday'
				then  6
          when DATENAME(dw,@CurentDate) ='Friday'
		  then 7
		  when DATENAME(dw,@CurentDate) ='Saturday'
		    then 1
		  when DATENAME(dw,@CurentDate) ='Sunday'
		    then 2
		  when DATENAME(dw,@CurentDate) ='Monday'
		    then 3
		  when DATENAME(dw,@CurentDate) ='Tuesday'
		    then 4
		  when DATENAME(dw,@CurentDate) ='Wednesday'
		    then 5

	end

	set @DayNameOfWeek=
	
	 case when DATENAME(dw,@CurentDate) ='Thursday'
				then  N'پنج شنبه'
          when DATENAME(dw,@CurentDate) ='Friday'
		  then N'جمعه'
		  when DATENAME(dw,@CurentDate) ='Saturday'
		    then N'شنبه'
		  when DATENAME(dw,@CurentDate) ='Sunday'
		    then N'یکشنبه'
		  when DATENAME(dw,@CurentDate) ='Monday'
		    then N'دوشنبه'
		  when DATENAME(dw,@CurentDate) ='Tuesday'
		    then N'سه شنبه'
		  when DATENAME(dw,@CurentDate) ='Wednesday'
		    then N'چهارشنبه'

	end
	 

	if @tempyear<>@year
	begin
	set @tempyear=@year
	 set @DayNumberOfYear=1
	set @WeekNumberOfYear=1
	end
	else
	 begin
	 set @DayNumberOfYear=@DayNumberOfYear+1

			 if	@DayNumberOfWeek =1 and @DayNumberOfYear>1
				set @WeekNumberOfYear=@WeekNumberOfYear+1
	 end

	  set @CalendarQuarterKey =
	
	 case when  @month<=3
				then  1
          when  @month>3 and  @month<=6
		  then 2
		  when @month>6 and  @month<=9
		    then 3
		  when @month>9 and  @month<=12
		    then 4
			end


	set @CalendarQuarterName =
	
	 case when @month<=3
				then  N'بهار'
          when  @month>3 and  @month<=6
		  then N'تابستان'
		  when @month>6 and  @month<=9
		    then N'پاییز'
		  when @month>9 and  @month<=12
		    then N'زمستان'
			end

		set @CalendarSemesterKey =
	
	 case when @month<=6
				then  1
          when  @month>6  
		  then 2
		  end

		  set @CalendarSemester =
	
	 case when @month<=6
				then  N'شش ماه اول'
          when  @month>6  
		  then N'شش ماه دوم'	 
		  end

		set @CalenderMonthName= 
		case when @month=1
				then  N'فروردین'
				  when @month=2
				then  N'اردیبهشت'
				when @month=3
				then  N'خرداد'
				 when @month=4
				then  N'تیر'
				 when @month=5
				then  N'مرداد'
				 when @month=6
				then  N'شهریور'
				 when @month=7
				then  N'مهر'
				 when @month=8
				then  N'آبان'
				 when @month=9
				then  N'آذر'
				 when @month=10
				then  N'دی'
				 when @month=11
				then  N'بهمن'
				 when @month=12
				then  N'اسفند'
				end

 set  @DateName= @year+'/'+@month+'/'+@day
  

INSERT INTO [dbo].[Gen_DimDate]
            
     VALUES
 
           (@DateKey,@DateName,@CurentDate,@DayNumberOfWeek,@DayNameOfWeek,
		   @day,@DayNumberOfYear,@WeekNumberOfYear,@CalendarQuarterKey,@CalendarQuarterName
		   ,@year,@CalendarSemesterKey,@CalendarSemester,@month,@CalenderMonthName)
 



   
 
    

	set @CurentDate=dateadd(day,1,@CurentDate)
      CONTINUE  
END  

